{"remainingRequest":"/home/dongkien/Desktop/Practice/component-example/node_modules/babel-loader/lib/index.js!/home/dongkien/Desktop/Practice/component-example/node_modules/ts-loader/index.js??ref--13-2!/home/dongkien/Desktop/Practice/component-example/src/module/state.ts","dependencies":[{"path":"/home/dongkien/Desktop/Practice/component-example/src/module/state.ts","mtime":1610276000831},{"path":"/home/dongkien/Desktop/Practice/component-example/node_modules/cache-loader/dist/cjs.js","mtime":1610120991181},{"path":"/home/dongkien/Desktop/Practice/component-example/node_modules/babel-loader/lib/index.js","mtime":1610120991178},{"path":"/home/dongkien/Desktop/Practice/component-example/node_modules/ts-loader/index.js","mtime":1610121002169}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIGJhc2VVcmwgPSAnaHR0cHM6Ly9hcGkuaW5zdGFudHdlYnRvb2xzLm5ldC92MS8nOwp2YXIgc3RhdGUgPSB7CiAgbnVtOiAwLAogIGFpcmxpbmVMaXN0OiBbXSwKICBwYXNzZW5nZXJMaXN0OiBbXQp9Owp2YXIgbXV0YXRpb25zID0gewogIGFkZDogZnVuY3Rpb24gYWRkKHN0YXRlLCBwYXlsb2FkKSB7CiAgICByZXR1cm4gc3RhdGUubnVtICs9IHBheWxvYWQ7CiAgfSwKICBtaW51czogZnVuY3Rpb24gbWludXMoc3RhdGUsIHBheWxvYWQpIHsKICAgIHJldHVybiBzdGF0ZS5udW0gLT0gcGF5bG9hZDsKICB9LAogIGdldExpc3RBaXJsaW5lOiBmdW5jdGlvbiBnZXRMaXN0QWlybGluZShzdGF0ZSwgYXJpbGluZUxpc3QpIHsKICAgIHJldHVybiBzdGF0ZS5haXJsaW5lTGlzdCA9IGFyaWxpbmVMaXN0OwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7fTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/home/dongkien/Desktop/Practice/component-example/src/module/state.ts"],"names":[],"mappings":"AA6BA,IAAM,OAAO,GAAG,qCAAhB;AAEA,IAAM,KAAK,GAAU;AACjB,EAAA,GAAG,EAAE,CADY;AAEjB,EAAA,WAAW,EAAE,EAFI;AAGjB,EAAA,aAAa,EAAE;AAHE,CAArB;AAOC,IAAM,SAAS,GAAG;AACf,EAAA,GAAG,EAAE,aAAC,KAAD,EAAc,OAAd;AAAA,WAAiC,KAAK,CAAC,GAAN,IAAY,OAA7C;AAAA,GADU;AAEf,EAAA,KAAK,EAAE,eAAC,KAAD,EAAc,OAAd;AAAA,WAAgC,KAAK,CAAC,GAAN,IAAY,OAA5C;AAAA,GAFQ;AAGf,EAAA,cAAc,EAAE,wBAAC,KAAD,EAAe,WAAf;AAAA,WAA0C,KAAK,CAAC,WAAN,GAAoB,WAA9D;AAAA;AAHD,CAAlB;AAMD,IAAM,OAAO,GAAG,EAAhB;AAQA,eAAe;AACX,EAAA,KAAK,EAAL,KADW;AAEX,EAAA,SAAS,EAAT;AAFW,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport interface Airline {\n    id: number;\n    name: string;\n    country: string;\n    logo: string;\n    slogan: string;\n    head_quaters: string;\n    website: string;\n    established: string;\n  }\n  export interface Passenger {\n    _id: string;\n    name: string;\n    trips: number;\n    airline: Airline;\n  }\n  export interface ResponsePassenger {\n    totalPassengers: number;\n    totalPages: number;\n    data: Passenger[];\n  }  \n\n  export interface State {\n    num: number\n    airlineList: Airline[];\n    passengerList: Passenger[],\n}\nconst baseUrl = 'https://api.instantwebtools.net/v1/';\n\nconst state: State = {\n    num: 0,\n    airlineList: [],\n    passengerList: []\n}\n\n\n const mutations = {\n    add: (state: State,payload:number) => state.num +=payload ,\n    minus: (state: State,payload:number) =>state.num -=payload,\n    getListAirline: (state: State, arilineList: Airline[]) =>(state.airlineList = arilineList)\n}\n\nconst actions = {\n    // async fetchAirline({commit:any}) => {\n    //   const response = await axios.get(`${baseUrl}airlines`);\n    //   commit('getListAirline', response.data)\n    // }\n    [ActionTypes.FETCH_AIRLINE]({commit})\n}\n\nexport default {\n    state,\n    mutations\n}\n"],"sourceRoot":""}]}