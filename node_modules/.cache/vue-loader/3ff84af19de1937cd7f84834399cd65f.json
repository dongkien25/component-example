{"remainingRequest":"/home/kientd/Desktop/component-example/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/kientd/Desktop/component-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kientd/Desktop/component-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kientd/Desktop/component-example/src/components/AirlineTable.vue?vue&type=template&id=6304ca60&","dependencies":[{"path":"/home/kientd/Desktop/component-example/src/components/AirlineTable.vue","mtime":1609917791666},{"path":"/home/kientd/Desktop/component-example/node_modules/cache-loader/dist/cjs.js","mtime":1609811301954},{"path":"/home/kientd/Desktop/component-example/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1609811302570},{"path":"/home/kientd/Desktop/component-example/node_modules/cache-loader/dist/cjs.js","mtime":1609811301954},{"path":"/home/kientd/Desktop/component-example/node_modules/vue-loader/lib/index.js","mtime":1609811302570}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}